#- set_fact:
#    router_lb_ip: "{{ hostvars['localhost']['router_lb_ip'] }}"
#    registry_storage_account_key: "{{  hostvars['localhost']['registry_storage_account_key'] }}"
- name: add bastion host
  add_host:
    name: "{{ rg }}b.{{ location }}.cloudapp.azure.com"
    groups: bastions
    ansible_user: "{{ admin_user }}"
    ansible_become: True

# The Azure VMs are provisioned asynchronously. It can take some time
# until they are reachable via SSH, even after Azure reports that the
# provisioning state is "Succeeded".
- name: Wait for nodes to become reachable via SSH
  wait_for_connection:
    sleep: 30
    timeout: 1200
    connect_timeout: 10
  delegate_to: "{{ groups['bastions'][0] }}"

- name: Azure | Bastion RHSM Activation Key
  redhat_subscription:
    state: "{{ state }}"
    activationkey: "{{ rhsm_key }}"
    org_id: "{{ rhsm_org }}"
    pool_ids: "{{ rhsm_broker_pool }}"
  delegate_to: "{{ groups['bastions'][0] }}"
  when:
    - rhsm_key is defined and rhsm_key != ""
    - rhsm_org is defined and rhsm_org != ""

- name: Azure | Bastion RHSM Username - Password
  redhat_subscription:
    state: "{{ state }}"
    username: "{{ rhsm_user }}"
    password: "{{ rhsm_pass }}"
    pool_ids: "{{ rhsm_broker_pool }}"
  delegate_to: "{{ groups['bastions'][0] }}"
  when:
    - rhsm_user is defined and rhsm_user != ""
    - rhsm_pass is defined and rhsm_pass != ""

- name: Azure | Bastion disable all repos
  rhsm_repository:
    name: '*'
    state: disabled
  delegate_to: "{{ groups['bastions'][0] }}"

- name: Azure | Bastion enable repos
  rhsm_repository:
    name: "{{ rhsm_repos }}"
    state: enabled
  delegate_to: "{{ groups['bastions'][0] }}"

- name: Azure | Bastion install required packages
  yum:
    name: "{{ bastion_pkgs }}"
    state: present
  delegate_to: "{{ groups['bastions'][0] }}"

- name: Azure | Bastion template ansible hosts
  template:
    src: hosts.j2
    dest: hosts
    backup: yes
  delegate_to: "{{ groups['bastions'][0] }}"

- name: Azure | Bastion copy files
  copy:
    src: ansible.cfg
    dest: ansible.cfg
  delegate_to: "{{ groups['bastions'][0] }}"

- block:
    - name: Azure | Add ocpadmin group
      group:
        name: ocpadmin
      delegate_to: "{{ groups['bastions'][0] }}"

    - name: Allow password-less sudo for ocpadmin group
      copy:
        dest: /etc/sudoers.d/ocpadmin
        content: "%ocpadmin        ALL=(ALL)       NOPASSWD: ALL"
      delegate_to: "{{ groups['bastions'][0] }}"

    - name: Azure | Add local user
      user:
        name: "{{ item.key }}"
        groups: ocpadmin
        append: yes
      delegate_to: "{{ groups['bastions'][0] }}"
      with_dict: "{{ bastion_users }}"

    - name: Azure | Add authorized key
      authorized_key:
        user: "{{ item.key }}"
        key: "{{ item.value }}"
      delegate_to: "{{ groups['bastions'][0] }}"
      with_dict: "{{ bastion_users }}"
  when: bastion_users != {}
