- name: Azure | Bastion copy files
  copy:
    src: ansible.cfg
    dest: ansible.cfg

- name: Azure | Manage Resource Group
  azure_rm_resourcegroup:
    state: "{{ state }}"
    name: "{{ rg }}"
    location: "{{ location }}"

- name: Azure | Manage vNet
  azure_rm_virtualnetwork:
    name: "{{ vnet_name }}"
    resource_group: "{{ rg }}"
    address_prefixes_cidr:
        - "{{ vnet_cidr }}"

- name: Azure | Manage Master subnet
  azure_rm_subnet:
    name: master_subnet
    state: "{{ state }}"
    virtual_network_name: "{{ vnet_name }}"
    resource_group: "{{ rg }}"
    address_prefix_cidr: "{{ master_subnet_cidr }}"

- name: Azure | Manage Infra subnet
  azure_rm_subnet:
    name: infra_subnet
    state: "{{ state }}"
    virtual_network_name: "{{ vnet_name }}"
    resource_group: "{{ rg }}"
    address_prefix_cidr: "{{ infra_subnet_cidr }}"

# only create if deploying CNS on separate nodes
- name: Azure | Manage CNS subnet
  azure_rm_subnet:
    name: cns_subnet
    state: "{{ state }}"
    virtual_network_name: "{{ vnet_name }}"
    resource_group: "{{ rg }}"
    address_prefix_cidr: "{{ cns_subnet_cidr }}"
  when: 
    - deploy_cns | default(true) | bool
    - not deploy_cns_on_infra | default(false) | bool

- name: Azure | Manage App subnet
  azure_rm_subnet:
    name: app_subnet
    state: "{{ state }}"
    virtual_network_name: "{{ vnet_name }}"
    resource_group: "{{ rg }}"
    address_prefix_cidr: "{{ app_subnet_cidr }}"

- name: Azure | Manage Bastion Network Security Group
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: bastion-nsg
    purge_rules: yes
    rules:
        - name: bastion-ssh
          description: "SSH access from Internet"
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 500
          direction: Inbound

- name: Azure | Manage Master Network Security Group
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: master-nsg
    purge_rules: yes
    rules:
        - name: master-ssh
          description: "SSH from bastion"
          protocol: Tcp
          destination_port_range: 22
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 500
          direction: Inbound
        - name: master-etcd
          description: "ETCD service ports"
          protocol: Tcp
          destination_port_range: 2379-2380
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 525
          direction: Inbound
        - name: master-api
          description: "API port"
          protocol: Tcp
          destination_port_range: "{{ api_port }}"
          access: Allow
          priority: 550
          direction: Inbound
        - name: master-api-lb
          description: "API LB  port"
          protocol: Tcp
          destination_port_range: "{{ api_port }}"
          access: Allow
          priority: 575
          direction: Inbound
        - name: master-ocp-tcp-dns
          description: "TCP DNS "
          protocol: Tcp
          destination_port_range: 8053
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 600
          direction: Inbound
        - name: master-ocp-tcp-fluentd
          description: "TCP fluentd"
          protocol: Tcp
          destination_port_range: 24224
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 625
          direction: Inbound
        - name: master-node-kubelet
          description: "Kubelet"
          protocol: Tcp
          destination_port_range: 10250
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 650
          direction: Inbound
        - name: master-node-sdn
          description: "OpenShift SDN"
          protocol: Udp
          destination_port_range: 4789
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 675
          direction: Inbound

- name: Azure | Manage Infra Network Security Group
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: infra-node-nsg
    purge_rules: yes
    rules:
        - name: infra-ssh
          description: "SSH from bastion"
          protocol: Tcp
          destination_port_range: 22
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 500
          direction: Inbound
        - name: infra-router-http-ports
          description: "OpenShift Router HTTP"
          protocol: Tcp
          destination_port_range: 80
          source_address_prefix: AzureLoadBalancer
          access: Allow
          priority: 525
          direction: Inbound
        - name: infra-router-ports-https
          description: "OpenShift Router HTTPS"
          protocol: Tcp
          destination_port_range: 443
          source_address_prefix: AzureLoadBalancer
          access: Allow
          priority: 550
          direction: Inbound
        - name: infra-es-ports-rest
          description: "ElasticSearch Rest Port"
          protocol: Tcp
          destination_port_range: 9200
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 575
          direction: Inbound
        - name: infra-es-port-node
          description: "ElasticSearch Node Port"
          protocol: Tcp
          destination_port_range: 9300
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 600
          direction: Inbound
        - name: infra-node-kubelet
          description: "Kubelet"
          protocol: Tcp
          destination_port_range: 10250
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 625
          direction: Inbound
        - name: infra-node-sdn
          description: "OpenShift SDN"
          protocol: Udp
          destination_port_range: 4789
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 650
          direction: Inbound
        - name: infra-router-port-http-vnet
          description: "OpenShift Router HTTP from vNet"
          protocol: Tcp
          destination_port_range: 80
          access: Allow
          priority: 675
          direction: Inbound
        - name: infra-router-port-https-vnet
          description: "OpenShift Router HTTPS from vNet"
          protocol: Tcp
          destination_port_range: 443
          access: Allow
          priority: 700
          direction: Inbound

- name: Azure | Manage Node Network Security Group
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: node-nsg
    purge_rules: yes
    rules:
        - name: node-ssh
          description: "SSH from bastion"
          protocol: Tcp
          destination_port_range: 22
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 500
          direction: Inbound
        - name: node-kubelet
          description: "Kubelet"
          protocol: Tcp
          destination_port_range: 10250
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 525
          direction: Inbound
        - name: node-sdn
          description: "ElasticSearch and OCP Apps"
          protocol: Tcp
          destination_port_range: 4789
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 550
          direction: Inbound

# Only create this NSG if deploying CNS on separate Nodes
- name: Azure | Manage CNS  Network Security Group
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: cns-nsg
    purge_rules: yes
    rules:
        - name: node-ssh
          description: "SSH from bastion"
          protocol: Tcp
          destination_port_range: 22
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 500
          direction: Inbound
        - name: node-kubelet
          description: "Kubelet"
          protocol: Tcp
          destination_port_range: 10250
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 525
          direction: Inbound
        - name: node-sdn
          description: "ElasticSearch and OCP Apps"
          protocol: Tcp
          destination_port_range: 4789
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 550
          direction: Inbound
        - name: gluster-ssh
          description: "Gluster SSH"
          protocol: Tcp
          destination_port_range: 2222
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 575
          direction: Inbound
        - name: gluster-daemon
          description: "Gluster Daemon"
          protocol: Tcp
          destination_port_range: 24008
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 600
          direction: Inbound
        - name: gluster-mgmt
          description: "Gluster Management"
          protocol: Tcp
          destination_port_range: 24009
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 625
          direction: Inbound
        - name: gluster-client
          description: "Gluster Clients"
          protocol: Tcp
          destination_port_range: 49152-49664
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 650
          direction: Inbound
        - name: portmap-tcp
          description: "Portmap TCP"
          protocol: Tcp
          destination_port_range: 111
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 675
          direction: Inbound
        - name: portmap-udp
          description: "Portmap UDP"
          protocol: Udp
          destination_port_range: 111
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 700
          direction: Inbound
        - name: gluster-iscsi
          description: "Gluster ISCSI"
          protocol: Tcp
          destination_port_range: 3260
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 725
          direction: Inbound
        - name: gluster-block
          description: "Gluster Blockd"
          protocol: Tcp
          destination_port_range: 24010
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 750
          direction: Inbound
  when: 
    - deploy_cns | default(true) | bool
    - not deploy_cns_on_infra | default(false) | bool

# Update Infra NSG if deploy_cns_on_infra = true
- name: Azure | Update Infra NSG with CNS rules
  azure_rm_securitygroup:
    resource_group: "{{ rg }}"
    name: infra-node-nsg
    rules:
        - name: gluster-ssh
          description: "Gluster SSH"
          protocol: Tcp
          destination_port_range: 2222
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 725
          direction: Inbound
        - name: gluster-daemon
          description: "Gluster Daemon"
          protocol: Tcp
          destination_port_range: 24008
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 750
          direction: Inbound
        - name: gluster-mgmt
          description: "Gluster Management"
          protocol: Tcp
          destination_port_range: 24009
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 775
          direction: Inbound
        - name: gluster-client
          description: "Gluster Clients"
          protocol: Tcp
          destination_port_range: 49152-49664
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 800
          direction: Inbound
        - name: portmap-tcp
          description: "Portmap TCP"
          protocol: Tcp
          destination_port_range: 111
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 825
          direction: Inbound
        - name: portmap-udp
          description: "Portmap UDP"
          protocol: Udp
          destination_port_range: 111
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 850
          direction: Inbound
        - name: gluster-iscsi
          description: "Gluster ISCSI"
          protocol: Tcp
          destination_port_range: 3260
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 875
          direction: Inbound
        - name: gluster-block
          description: "Gluster Blockd"
          protocol: Tcp
          destination_port_range: 24010
          source_address_prefix: VirtualNetwork
          access: Allow
          priority: 900
          direction: Inbound
  when: 
    - deploy_cns | default(true) | bool
    - deploy_cns_on_infra | default(false) | bool


# Public IPS
- name: Azure | Manage Master Public IP
  azure_rm_publicipaddress:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: "{{ master_lb_public_ip }}"
    domain_name_label: "{{ rg }}"
    allocation_method: Static
  register: master_lb_ip
  when: master_lb_private_ip is not defined

- name: Azure | Manage Router Public IP
  azure_rm_publicipaddress:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: "{{ router_lb_public_ip }}"
    allocation_method: Static
  register: router_lb_ip

- name: Azure | Manage Bastion Public IP
  azure_rm_publicipaddress:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: bastionExternalIP
    domain_name_label: "{{ rg }}b"
    allocation_method: Static
  register: bastion_public_ip

- set_fact:
    router_lb_ip: "{{ router_lb_ip.state.ip_address }}"

# LBs
- name: Azure | Manage public Master LB
  azure_rm_loadbalancer:
    name: ocpMasterLB
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    frontend_ip_configurations:
      - name: masterApiFrontend
        public_ip_address: "{{ master_lb_public_ip }}"
    backend_address_pools:
      - name: masterAPIBackend
    probes:
      - name: masterHealthProbe
        port: "{{ api_port }}"
        protocol: Tcp
    load_balancing_rules:
      - name: ocpApiHealth
        frontend_ip_configuration: masterApiFrontend
        backend_address_pool: masterAPIBackend
        probe: masterHealthProbe
        protocol: Tcp
        frontend_port: "{{ api_port }}"
        backend_port: "{{ api_port }}"
        load_distribution: SourceIPProtocol
  when: master_lb_private_ip is not defined

# As of Ansible 2.5, the azure_rm_loadbalancer has no support for
# creating an internal Azure load balancer. Use the Azure CLI instead.
- name: Azure | Manage private Master LB
  block:
    - name: Azure | Create private Master LB
      command: >
        az network lb create
          --resource-group {{ rg }}
          --name ocpMasterLB
          --location {{ location }}
          --frontend-ip-name masterApiFrontend
          --private-ip-address {{ master_lb_private_ip }}
          --vnet-name {{ vnet_name }}
          --subnet master_subnet
          --public-ip-address ''
          --backend-pool-name masterAPIBackend

    - name: Azure | Create private Master LB probe
      command: >
        az network lb probe create
          --resource-group {{ rg }}
          --lb-name ocpMasterLB
          --name masterHealthProbe
          --protocol Tcp
          --port {{ api_port }}

    - name: Azure | Create private Master LB rule
      command: >
        az network lb rule create
          --resource-group {{ rg }}
          --lb-name ocpMasterLB
          --name ocpApiHealth
          --protocol Tcp
          --frontend-port {{ api_port }}
          --backend-port {{ api_port }}
          --frontend-ip-name masterApiFrontend
          --backend-pool-name masterAPIBackend
          --probe-name masterHealthProbe
          --load-distribution SourceIPProtocol
  when: master_lb_private_ip is defined

- name: Azure | Manage Router LB
  azure_rm_loadbalancer:
    name: ocpRouterLB
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    frontend_ip_configurations:
      - name: routerFrontEnd
        public_ip_address: "{{ router_lb_public_ip }}"
    backend_address_pools:
      - name: routerBackEnd
    probes:
      - name: routerHealthProbe
        port: 80
        protocol: Tcp
    load_balancing_rules:
      - name: routerRule
        frontend_ip_configuration: routerFrontEnd
        backend_address_pool: routerBackEnd
        probe: routerHealthProbe
        protocol: Tcp
        frontend_port: 80
        backend_port: 80
        load_distribution: SourceIPProtocol
      - name: httpsRouterRule
        frontend_ip_configuration: routerFrontEnd
        backend_address_pool: routerBackEnd
        probe: routerHealthProbe
        protocol: Tcp
        frontend_port: 443
        backend_port: 443
        load_distribution: SourceIPProtocol

# availablity Sets
- name: Azure | Manage Availability Sets
  azure_rm_availabilityset:
    name: "{{ item }}"
    state: "{{ state }}"
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    platform_fault_domain_count: 2
    sku: Aligned
  loop:
    - "ocp-master-instances"
    - "ocp-infra-instances"
    - "ocp-app-instances"

# availablity Set for CNS Only
- name: Azure | Manage CNS Availability Set
  azure_rm_availabilityset:
    name: ocp-cns-instances
    state: "{{ state }}"
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    platform_fault_domain_count: 2
    sku: Aligned
  when: 
    - deploy_cns | default(true) | bool
    - not deploy_cns_on_infra | default(false) | bool

# create VM Nics
# Lacks ability for adding Nics to backend pool of LB
# https://github.com/ansible/ansible/issues/37734
#- name: Azure | Manage VM Nics
#  azure_rm_networkinterface:
  #  name: "{{ item.name }}"
  #  resource_group: "{{ rg }}"
  #  virtual_network_name: "{{ vnet_name }}"
  #  subnet_name: "{{ item.subnet }}"
  #  security_group_name: "{{ }}"
  #  public_ip: false
  
- name: Azure | Manage Master Nics
  shell: " az network nic create  --resource-group {{ rg }} \
  --name ocp-master-{{ item }}VMNic \
  --vnet-name {{ vnet_name }} \
  --subnet master_subnet \
  --network-security-group master-nsg \
  --lb-name ocpMasterLB \
  --lb-address-pools masterAPIBackend \
  --internal-dns-name ocp-master-{{ item }} \
  --public-ip-address '' "
  loop: "{{ master_nodes }}"
  register: nic
  failed_when: 
    - "'InternalDnsName' not in nic.stderr"
    - "nic.rc != 0"
  changed_when: false

- name: Azure | Manage Infra Nics
  shell: " az network nic create  --resource-group {{ rg }} \
  --name ocp-infra-{{ item }}VMNic \
  --vnet-name {{ vnet_name }} \
  --subnet infra_subnet \
  --network-security-group infra-node-nsg \
  --lb-name ocpRouterLB \
  --lb-address-pools RouterBackend \
  --internal-dns-name ocp-infra-{{ item }} \
  --public-ip-address '' "
  loop: "{{ infra_nodes }}"
  register: nic
  failed_when: 
    - "'InternalDnsName' not in nic.stderr"
    - "nic.rc != 0"
  changed_when: false

- name: Azure | Manage Node  Nics
  shell: " az network nic create  --resource-group {{ rg }} \
  --name ocp-app-{{ item }}VMNic \
  --vnet-name {{ vnet_name }} \
  --subnet app_subnet \
  --network-security-group node-nsg \
  --internal-dns-name ocp-app-{{ item }} \
  --public-ip-address '' "
  loop: "{{ app_nodes }}"
  register: nic
  failed_when: 
    - "'InternalDnsName' not in nic.stderr"
    - "nic.rc != 0"
  changed_when: false

- name: Azure | Manage CNS Nics
  shell: " az network nic create  --resource-group {{ rg }} \
  --name ocp-cns-{{ item }}VMNic \
  --vnet-name {{ vnet_name }} \
  --subnet cns_subnet \
  --network-security-group cns-nsg \
  --internal-dns-name ocp-cns-{{ item }} \
  --public-ip-address '' "
  loop: "{{ cns_nodes }}"
  register: nic
  failed_when: 
    - "'InternalDnsName' not in nic.stderr"
    - "nic.rc != 0"
  changed_when: false
  when: 
    - deploy_cns | default(true) | bool
    - not  deploy_cns_on_infra | default(false) | bool

- name: Azure | Manage public Bastion Nic
  shell: " az network nic create  --resource-group {{ rg }} \
  --name bastion-VMNic \
  --vnet-name {{ vnet_name }} \
  --subnet master_subnet \
  --network-security-group bastion-nsg \
  --public-ip-address bastionExternalIP "
  register: nic
  failed_when: 
    - "'InternalDnsName' not in nic.stderr"
    - "nic.rc != 0"
  changed_when: false
  when: bastion_private_ip is not defined

# The "--public-ip-address" parameter can be removed if the host on
# which the deploy.yml playbook runs can connect to the private
# bastion IP address.
- name: Azure | Manage public/private Bastion Nic
  shell: " az network nic create  --resource-group {{ rg }} \
  --name bastion-VMNic \
  --vnet-name {{ vnet_name }} \
  --subnet master_subnet \
  --network-security-group bastion-nsg \
  --public-ip-address bastionExternalIP \
  --private-ip-address {{ bastion_private_ip }} "
  register: nic
  failed_when: 
    - "'InternalDnsName' not in nic.stderr"
    - "nic.rc != 0"
  changed_when: false
  when: bastion_private_ip is defined

# Create VMs
- name: Azure | Manage Master VMs
  azure_rm_virtualmachine:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: ocp-master-{{ item }}
    availability_set: ocp-master-instances 
    vm_size: "{{ vm_size_master }}"
    admin_username: "{{ admin_user }}"
    managed_disk_type: Standard_LRS
    network_interface_names:
      - ocp-master-{{ item }}VMNic
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/{{ admin_user }}/.ssh/authorized_keys
        key_data: "{{ admin_pubkey }}"
    image:
      offer: RHEL
      publisher: RedHat
      sku: 7-RAW
      version: latest
  loop: "{{ master_nodes }}" 

# create - mount data disk in order above method was unreliable
# Container Storage for emptydir  /var/lib/origin /dev/sdc
- name: Azure | Master node mount container managed disk
  azure_rm_managed_disk:
    name: "ocp-master-container-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 32 
    managed_by: "ocp-master-{{ item }}"
  loop: "{{ master_nodes }}"

# Docker VG /dev/sdd
- name: Azure | Master node mount docker managed disk
  azure_rm_managed_disk:
    name: "ocp-master-docker-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 32
    managed_by: "ocp-master-{{ item }}"
  loop: "{{ master_nodes }}"

# ETCD /dev/sde
- name: Azure | Master node mount ETCD managed disk
  azure_rm_managed_disk:
    name: "ocp-master-etcd-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 32
    managed_by: "ocp-master-{{ item }}"
  loop: "{{ master_nodes }}"

# Infra VMs
- name: Azure | Manage Infra VMs
  azure_rm_virtualmachine:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: ocp-infra-{{ item }}
    availability_set: ocp-infra-instances 
    vm_size:  "{{ vm_size_infra }}"
    admin_username: "{{ admin_user }}"
    managed_disk_type: Standard_LRS
    network_interface_names:
      - ocp-infra-{{ item }}VMNic
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/{{ admin_user }}/.ssh/authorized_keys
        key_data: "{{ admin_pubkey }}"
    image:
      offer: RHEL
      publisher: RedHat
      sku: 7-RAW
      version: latest
  loop: "{{ infra_nodes }}" 

# create - mount data disk in order above method was unreliable
# Container Storage for emptydir  /var/lib/origin /dev/sdc
- name: Azure | Infra node mount container managed disk
  azure_rm_managed_disk:
    name: "ocp-infra-container-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 64
    managed_by: "ocp-infra-{{ item }}"
  loop: "{{ infra_nodes }}"

# Docker VG /dev/sdd
- name: Azure | Infra node mount docker managed disk
  azure_rm_managed_disk:
    name: "ocp-infra-docker-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 32
    managed_by: "ocp-infra-{{ item }}"
  loop: "{{ infra_nodes }}"

# Create managed Gluster brick when deploy_cns_on_infra
# Bricks /dev/sde 
- name: Azure | Infra CNS mount BRICK managed disk
  azure_rm_managed_disk:
    name: "ocp-cns-volume-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 512
    managed_by: "ocp-infra-{{ item }}"
  loop: "{{ infra_nodes }}"
  when: 
    - deploy_cns | default(true) | bool
    - deploy_cns_on_infra | default(false) | bool


- name: Azure | Manage App VMs
  azure_rm_virtualmachine:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: ocp-app-{{ item }}
    availability_set: ocp-app-instances 
    vm_size:  "{{ vm_size_node }}"
    admin_username: "{{ admin_user }}"
    managed_disk_type: Standard_LRS
    network_interface_names:
      - ocp-app-{{ item }}VMNic
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/{{ admin_user }}/.ssh/authorized_keys
        key_data: "{{ admin_pubkey }}"
    image:
      offer: RHEL
      publisher: RedHat
      sku: 7-RAW
      version: latest
  loop: "{{ app_nodes }}" 

# create - mount data disk in order above method was unreliable
# Container Storage for emptydir  /var/lib/origin /dev/sdc
- name: Azure | App node mount container managed disk
  azure_rm_managed_disk:
    name: "ocp-app-container-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 64
    managed_by: "ocp-app-{{ item }}"
  loop: "{{ app_nodes }}"

# Docker VG /dev/sdd
- name: Azure | App node mount docker managed disk
  azure_rm_managed_disk:
    name: "ocp-app-docker-{{ item }}" 
    location: "{{ location }}"
    resource_group: "{{ rg }}"
    disk_size_gb: 32
    managed_by: "ocp-app-{{ item }}"
  loop: "{{ app_nodes }}"

# CNS VMs
- block:
  - name: Azure | Manage CNS VMs
    azure_rm_virtualmachine:
      resource_group: "{{ rg }}"
      state: "{{ state }}"
      name: ocp-cns-{{ item }}
      availability_set: ocp-cns-instances 
      vm_size:  "{{ vm_size_cns }}"
      admin_username: "{{ admin_user }}"
      managed_disk_type: Standard_LRS
      network_interface_names:
        - ocp-cns-{{ item }}VMNic
      ssh_password_enabled: false
      ssh_public_keys:
        - path: /home/{{ admin_user }}/.ssh/authorized_keys
          key_data: "{{ admin_pubkey }}"
      image:
        offer: RHEL
        publisher: RedHat
        sku: 7-RAW
        version: latest
    loop: "{{ cns_nodes }}" 
  
  # create - mount data disk in order above method was unreliable
  # Container Storage for emptydir  /var/lib/origin /dev/sdc
  - name: Azure | CNS node mount container managed disk
    azure_rm_managed_disk:
      name: "ocp-cns-container-{{ item }}" 
      location: "{{ location }}"
      resource_group: "{{ rg }}"
      disk_size_gb: 64
      managed_by: "ocp-cns-{{ item  }}"
    loop: "{{ cns_nodes }}"

  # Docker VG /dev/sdd
  - name: Azure | CNS node mount docker managed disk
    azure_rm_managed_disk:
      name: "ocp-cns-docker-{{ item }}" 
      location: "{{ location }}"
      resource_group: "{{ rg }}"
      disk_size_gb: 32
      managed_by: "ocp-cns-{{ item }}"
    loop: "{{ cns_nodes }}"

  # Bricks /dev/sde 
  - name: Azure | CNS node mount BRICK managed disk
    azure_rm_managed_disk:
      name: "ocp-cns-volume-{{ item }}" 
      location: "{{ location }}"
      resource_group: "{{ rg }}"
      disk_size_gb: 512
      managed_by: "ocp-cns-{{ item }}"
    loop: "{{ cns_nodes }}"
  when: 
    - deploy_cns | default(true) | bool
    - not deploy_cns_on_infra | default(false) | bool

- name: Azure | Manage Bastion VM
  azure_rm_virtualmachine:
    resource_group: "{{ rg }}"
    state: "{{ state }}"
    name: bastion
    vm_size:  "{{ vm_size_bastion }}"
    admin_username: "{{ admin_user }}"
    managed_disk_type: Standard_LRS
    network_interface_names:
      - bastion-VMNic
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/{{ admin_user }}/.ssh/authorized_keys
        key_data: "{{ admin_pubkey }}"
    image:
      offer: RHEL
      publisher: RedHat
      sku: 7-RAW
      version: latest

# Registry 
- name: Azure | Manage Registry Storage Account
  azure_rm_storageaccount:
    resource_group: "{{ rg }}"
    name: "{{ registry_storage_account }}"
    state: "{{ state }}"
    location: "{{ location }}"
    account_type: Standard_LRS
- shell: az storage account keys list --account-name "{{ registry_storage_account }}" \
        --resource-group "{{ rg }}" --query "[?keyName == 'key1'].value" -o tsv
  register: key

- set_fact:
    registry_storage_account_key: "{{ key.stdout }}"

- name: Azure | template ansible hosts
  template:
    src: hosts.j2
    dest: hosts
    backup: yes

- name: Azure | SSH config file exists with proper permissions
  file:
    state: touch
    path: ~/.ssh/config
    mode: 0600

- name: Azure | update SSH proxy config
  blockinfile:
    create: yes
    path: ~/.ssh/config
    insertafter: EOF
    block: |
      Host bastion
        HostName     {{ rg }}b.{{ location }}.cloudapp.azure.com
        User         {{ admin_user }}
        IdentityFile {{ admin_privkey }}
      Host ocp*
        ProxyCommand    ssh {{ admin_user }}@bastion -W %h:%p
        IdentityFile {{ admin_privkey }}
        User         {{ admin_user }}
    
- name: Refresh inventory to ensure new instaces exist in inventory
  meta: refresh_inventory

